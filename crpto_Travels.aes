contract TripNumber =

  record trip =
    { creatorAddress : address,
      url            : string,
      name           : string,
      numberCount      : int }

  record state =
    { trips      : map(int, trip),
      tripsLength : int }

  entrypoint init() =
    { trips = {},
      tripsLength = 0 }
  
  payable stateful entrypoint makeTrip()=
    Chain.spend(ak_2bKhoFWgQ9os4x8CaeDTHZRGzUcSwcXYUrM12gZHKTdyreGRgG,Call.value)

  entrypoint getTrip(index : int) : trip =
  	switch(Map.lookup(index, state.trips))
	    None    => abort("There is no trip with this item registered.")
	    Some(x) => x

  stateful entrypoint registerTrip(url' : string, name' : string) =
    let trip = { creatorAddress = Call.caller, url = url', name = name', numberCount = 0}
    let index = getTripsLength() + 1
    put(state{ trips[index] = trip, tripsLength = index })

  entrypoint getTripsLength() : int =
    state.tripsLength

  stateful entrypoint numbertrip(index : int) =
    let trip = getTrip(index)
    Chain.spend(trip.creatorAddress, Call.value)
    let updatednumberCount = trip.numberCount + Call.value
    let updatedtrips = state.trips{ [index].numberCount = updatednumberCount }
    put(state{ trips = updatedtrips })